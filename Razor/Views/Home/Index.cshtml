<!--
    — PRIMA PARTE —-
A questo punto, una volta ripulito GIT e creata una nuova repository,
per la prima parte riguardante Razor dovete creare un nuovo progetto MVC
dentro la vostra soluzione chiamato Razor per svolgere gli esercizi
che trovate nel file esercizi-razor.txt
Svolgeteli tutti all’interno della view Index del controller HomeController
che viene generata di default nel nuovo progetto che avete creato.



6. Partendo dalla data di oggi (usando la classe DateTime) 
stampare in pagina
a. la data di 7 giorni fa
b. che giorno della settimana è oggi 
(il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
c. che giorno della settimana sarà nello stesso giorno 
e mese di oggi ma tra un anno 
(il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)

 -->



@{
    ViewData["Title"] = "Home Page";


    string nome = "Emanuele";
    string cognome = "D'Alessandro";


}



<!-- 
1. Dichiarare una variabile valorizzandola con il nostro nome.
Dichiarare un'altra variabile valorizzandola con il nostro cognome.
Stampare il nostro nome e cognome all'interno di un tag h2. 
-->


<h2>
    @nome
    @cognome
</h2>


<!-- 
2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n 
(con n passato come parametro - n incluso)
Stampare dentro uno span il risultato. 
 -->


@{

    int sommaN (int N){
        int result = 0;
        for(int i = 1; i <= N; i++){
            result += i;
        }

        return result;


    }
}

@{int N = 3;}
<span>
    somma da 1 a @N è: 
    <b>
        @sommaN(N)
    </b>
</span>


<!-- 
3. Contare quante volte la lettera a è presente nalla frase 
"nel mezzo del cammin di nostra vita" e stampare questo valore in pagina
 -->



@{
    string frase = "nel mezzo del cammin di nostra vita";
    int M = 0;

    for (int i = 0; i < frase.Count(); i++)
    {
        if (@frase[i] == 'a')
        {
            M++;
        }
          
    } 
}

<div>
    <div>
        nella frase
    </div>
    <div>
        "@frase"
    </div>
    <div>
        ci sono @M "a"
    </div>


</div>


<!-- 
4. Creare una List<int>
    di 20 numeri interi
    (generati random da 1 a 90, 1 e 90 inclusi)
    e mostrare in pagina solo i numeri compresi tra 20 e 70 
-->

@{
    List<int> numbers = new List<int>();
    Random rnd = new Random();

    for (int i = 0; i < 20; i++)
    {
        numbers.Add(rnd.Next(1, 90));        
    }

    foreach (int number in numbers)
    {
        if (number > 20 && number < 70)
        {
            <div>
                @number
            </div>
        }
    }
}





<!-- 
5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) 
con il formato anno-mese-giorno ore:minuti:secondi 
-->

@{
    DateTime date1 = DateTime.Now;
}


<div>
    @date1.ToString("yyyy/MM/dd HH:mm:ss")
</div>